var f=Object.defineProperty;var p=(c,e,t)=>e in c?f(c,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[e]=t;var a=(c,e,t)=>(p(c,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const n of o.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function t(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(i){if(i.ep)return;i.ep=!0;const o=t(i);fetch(i.href,o)}})();class r{constructor(e=0,t=0){a(this,"x");a(this,"y");this.x=e,this.y=t}static down(){return new r(0,1)}static right(){return new r(1,0)}static left(){return new r(-1,0)}static addVec(e,t){return new r(e.x+t.x,e.y+t.y)}add(e,t){this.x+=e,this.y+=t}addVec(e){this.x+=e.x,this.y+=e.y}subtract(e,t){this.x-=e,this.y-=t}subtractVec(e){this.x-=e.x,this.y-=e.y}outOfBoard(e){return this.x<0||this.x>=e}}var d=(c=>(c[c.DEG0=0]="DEG0",c[c.DEG90=1]="DEG90",c[c.DEG180=2]="DEG180",c[c.DEG270=3]="DEG270",c))(d||{});class m{constructor(e,t,s,i,o,n=0){a(this,"timeout",0);a(this,"frequency",7);a(this,"frame",0);a(this,"framesInTotal");a(this,"size");a(this,"div",document.createElement("div"));a(this,"offset");a(this,"nextFrameOffset");a(this,"positions");a(this,"positionsIndex",0);a(this,"positionTimeout",0);a(this,"positionChangeFrequency",3*this.frequency);this.size=t,this.positions=o,this.offset=s,this.nextFrameOffset=n,this.framesInTotal=i,this.div.classList.add("spritesheet"),this.div.style.width=`${t.x}px`,this.div.style.height=`${t.y}px`,this.div.style.backgroundPositionX=`${-s}px`,this.div.style.position="absolute",this.div.style.left=`${o[0].x}px`,this.div.style.top=`${o[0].y}px`,e.appendChild(this.div)}update(){if(this.timeout=(this.timeout+1)%this.frequency,this.timeout===0){++this.frame>=this.framesInTotal&&(this.frame=0);const e=this.offset+(this.size.x+this.nextFrameOffset)*this.frame;this.div.style.backgroundPositionX=`${-e}px`}this.positionTimeout=(this.positionTimeout+1)%this.positionChangeFrequency,this.positionTimeout===0&&(this.positionsIndex=(this.positionsIndex+1)%this.positions.length,this.div.style.left=`${this.positions[this.positionsIndex].x}px`,this.div.style.top=`${this.positions[this.positionsIndex].y}px`)}}a(m,"imgSrc","/spritesheet.png");const l=class{constructor(){a(this,"board");a(this,"boardHTML");a(this,"blocks",new Map);a(this,"elementInControl",{id:-1,segments:[],angle:d.DEG0,active:!1});a(this,"loop",-1);a(this,"nextId",1);a(this,"scoreCounter",0);a(this,"recordCounter",0);a(this,"viruses",new Map);a(this,"virusCount",4);a(this,"colors",["red","blue","green"]);a(this,"staticAnimations");a(this,"frame",0);a(this,"buttonDown",!1);a(this,"state",3);a(this,"toDelete",new Map);a(this,"hand");a(this,"pillHand");a(this,"nextBlock");a(this,"spawnBlock",!1);console.log("Game start"),this.createScoreCounter();const[e,t]=this.createBoard(l.boardWidth,l.boardHeight);this.board=e,this.boardHTML=t,l.mainDiv.append(this.boardHTML),l.mainDiv.classList.add("mainDiv","spritesheet"),document.body.append(l.mainDiv),this.staticAnimations=this.createStaticAnimations();const[s,i]=this.createPillHand();this.hand=i,l.mainDiv.append(this.hand),this.pillHand=s,l.mainDiv.append(this.pillHand),this.nextBlock=this.generateNewBlock(),this.createVirusCounter(),this.handleKeys()}handleKeys(){document.addEventListener("keydown",e=>{switch(e.code){case"KeyD":if(this.buttonDown||this.state!==0)break;this.canMove(this.elementInControl,r.right())&&this.move(this.elementInControl,r.right());break;case"KeyA":if(this.buttonDown||this.state!==0)break;this.canMove(this.elementInControl,r.left())&&this.move(this.elementInControl,r.left());break;case"KeyS":this.buttonDown=!0;break;case"KeyW":if(this.buttonDown||this.state!==0)break;this.rotate(this.elementInControl);break;case"KeyE":if(this.buttonDown||this.state!==0)break;this.rotate(this.elementInControl,!0);break;case"KeyP":clearInterval(this.loop);break}})}createRow(e,t){const s=new Array(e),i=document.createElement("tr");for(let o=0;o<e;o++){s[o]=0;const n=document.createElement("td");n.classList.add("cell"),n.id=`${o}_${t}`,i.append(n)}return[s,i]}createBoard(e,t){const s=new Array(t),i=document.createElement("table");for(let o=0;o<t;o++){const[n,h]=this.createRow(e,o);s[o]=n,i.append(h)}return[s,i]}createPillHand(){const e=document.createElement("div");return e.append(document.createElement("div")),e.append(document.createElement("div")),[e,document.createElement("div")]}createScoreCounter(){const e=document.createElement("div");this.recordCounter=parseInt(window.localStorage.getItem("record")??"0"),this.scoreCounter=0;const t=document.createElement("div");t.id="recordImgs";const s=document.createElement("div");s.id="scoreImgs",this.updateScoreDiv(t,this.recordCounter),this.updateScoreDiv(s,this.scoreCounter),e.append(t),e.append(s),l.mainDiv.append(e)}addZerosToScore(e,t=7){return(Array(t-e.length).fill(0).join("")??"")+e}convertToImages(e){const t=[];for(let s=0;s<e.length;s++){const i=document.createElement("div");i.style.backgroundPositionX=`${-1155-parseInt(e[s])*24}px`,i.classList.add("spritesheet","letter"),t.push(i)}return t}updateScoreDiv(e,t){e.innerHTML="",this.convertToImages(this.addZerosToScore(t.toString())).forEach(s=>{e.append(s)})}createVirusCounter(){const e=document.createElement("div");e.id="virusCounter",this.convertToImages(this.addZerosToScore(this.virusCount.toString(),2)).forEach(t=>e.append(t)),l.mainDiv.append(e)}updateVirusCounter(){this.virusCount--;const e=document.getElementById("virusCounter");e!==null&&(e.innerHTML="",this.convertToImages(this.addZerosToScore(this.virusCount.toString(),2)).forEach(t=>e.append(t))),this.virusCount===0&&this.stageComplete()}createStaticAnimations(){return[{size:new r(96,73),offset:0,framesInTotal:2,nextFrameOffset:96,positions:[new r(30,220),new r(70,295),new r(120,230)]},{size:new r(96,73),offset:384,framesInTotal:2,nextFrameOffset:96,positions:[new r(120,230),new r(30,220),new r(70,295)]},{size:new r(96,73),offset:768,framesInTotal:2,nextFrameOffset:96,positions:[new r(70,295),new r(120,230),new r(30,220)]}].map(t=>new m(l.mainDiv,t.size,t.offset,t.framesInTotal,t.positions,t.nextFrameOffset))}randomColor(){const e=Math.round(Math.random()*1e3)%3;return e>=0&&e<this.colors.length?this.colors[e]:"violet"}generateNewBlock(){const e=[{position:new r(Math.floor(l.boardWidth/2)-1,0),color:this.randomColor(),frame:0,numOfFrames:4},{position:new r(Math.floor(l.boardWidth/2),0),color:this.randomColor(),frame:0,numOfFrames:4}];return this.pillHand.childNodes.forEach((t,s)=>{const i=t,o=s===0?1:3;i.className="cell",i.classList.add("spritesheet"),i.classList.add(`${e[s].color}-${o}`)}),this.pillHand.className="pill-hand",this.hand.className="hand",{id:this.nextId,segments:e,angle:d.DEG0,active:!0}}spawnNewBlock(){this.buttonDown=!1,this.spawnBlock=!1,this.elementInControl=this.nextBlock;for(const e of this.elementInControl.segments)if(this.isCellOccupied(e.position,0)){this.gameOver();return}this.blocks.set(this.nextId++,this.elementInControl),this.pillHand.classList.add("pill-animation"),this.hand.classList.add("hand-animation"),setTimeout(()=>{this.state=0;for(let e=0;e<this.elementInControl.segments.length;e++){const t=this.pillKind(this.elementInControl,e);this.updateBoard(0,this.elementInControl.id,this.elementInControl.segments[e].position.x,this.elementInControl.segments[e].position.y,this.elementInControl.segments[e].color,t),this.nextBlock=this.generateNewBlock()}},1600)}isCellOccupied(e,t){return this.board[e.y][e.x]!==0&&this.board[e.y][e.x]!==t}canMove(e,t){for(const s of e.segments){const i=r.addVec(s.position,t);if(i.y>=l.boardHeight||i.x<0||i.x>=l.boardWidth||this.isCellOccupied(i,e.id))return!1}return!0}move(e,t){for(let s=0;s<e.segments.length;s++)this.updateBoard(1,e.id,e.segments[s].position.x,e.segments[s].position.y,e.segments[s].color);for(let s=0;s<e.segments.length;s++){e.segments[s].position.addVec(t);const i=this.pillKind(e,s);this.updateBoard(0,e.id,e.segments[s].position.x,e.segments[s].position.y,e.segments[s].color,i)}}canRotate(e){let t=!0;for(let s=0;s<e.segments.length;s++)if(e.segments[s].position.outOfBoard(l.boardWidth)||this.isCellOccupied(e.segments[s].position,e.id)){t=!1;break}if(!t){const s=r.left();if(this.canMove(e,s)){for(let i=0;i<e.segments.length;i++)e.segments[i].position.addVec(s);return!0}else return!1}return!0}rotateVector(e,t=!1){switch(e){case d.DEG0:return t?[new r,new r(-1,-1)]:[new r(0,-1),new r(-1,0)];case d.DEG90:return t?[new r(0,1),new r(1,0)]:[new r(1,1),new r];case d.DEG180:return t?[new r(-1,-1),new r]:[new r(-1,0),new r(0,-1)];case d.DEG270:return t?[new r(1,0),new r(0,1)]:[new r,new r(1,1)];default:console.error("Incorrect angle: ",e)}return[new r,new r]}nextAngle(e,t){return t?e===d.DEG0?d.DEG270:e-1:e===d.DEG270?d.DEG0:e+1}pillKind(e,t){let s="";if(e.segments.length>1){let i=e.angle+1;t>0&&(i=(i+1)%4+1),s=(i%5).toString()}return s}rotate(e,t=!1){for(let o=0;o<e.segments.length;o++)this.updateBoard(1,e.id,e.segments[o].position.x,e.segments[o].position.y,e.segments[o].color);const s=this.rotateVector(e.angle,t),i=e.angle;if(e.segments[0].position.y!==0){e.angle=this.nextAngle(e.angle,t);for(let o=0;o<e.segments.length;o++)e.segments[o].position.addVec(s[o]);if(!this.canRotate(e)){e.angle=i;for(let o=0;o<e.segments.length;o++)e.segments[o].position.subtractVec(s[o])}}for(let o=0;o<e.segments.length;o++){const n=this.pillKind(e,o);this.updateBoard(0,e.id,e.segments[o].position.x,e.segments[o].position.y,e.segments[o].color,n)}}updateBoard(e,t,s,i,o="",n=""){switch(e){case 0:this.board[i][s]=t,this.boardHTML.rows[i].cells[s].classList.add("spritesheet"),t>0?this.boardHTML.rows[i].cells[s].classList.add(`${o}-${n}`):this.boardHTML.rows[i].cells[s].classList.add(`virus-${o}`);break;case 1:this.board[i][s]=0,this.boardHTML.rows[i].cells[s].className="cell";break;case 2:this.board[i][s]=t,this.boardHTML.rows[i].cells[s].className="cell",this.boardHTML.rows[i].cells[s].classList.add("spritesheet"),t>0?this.boardHTML.rows[i].cells[s].classList.add(`${o}-${n}`):this.boardHTML.rows[i].cells[s].classList.add(`virus-${o}`);break;case 3:this.boardHTML.rows[i].cells[s].className="cell",this.boardHTML.rows[i].cells[s].classList.add("spritesheet"),t>0?this.boardHTML.rows[i].cells[s].classList.add(`${o}-explosion`):this.boardHTML.rows[i].cells[s].classList.add(`virus-${o}-explosion`);break;default:console.error("Unknown update operation:",e)}}eliminateToSmall(e){for(let t=0;t<e.length;t++)e[t].length<4&&(e[t].length=0)}resetForNextCheck(e,t){return e[t].length>=4?(e.push([]),t++):e[t].length=0,t}checkRow(e){const t=[];t.push([]);let s=0;for(let i=0;i<l.boardWidth;i++)if(this.board[e][i]>0){const o=this.blocks.get(this.board[e][i]);if(typeof o>"u")continue;const n=o.segments[0].position.x===i&&o.segments[0].position.y===e?0:1;t[s].length>0&&t[s][0][0].color!==o.segments[n].color&&(s=this.resetForNextCheck(t,s)),t[s].push([o.segments[n],o.id])}else s=this.resetForNextCheck(t,s);return this.eliminateToSmall(t),t}checkColumn(e){const t=[];t.push([]);let s=0;for(let i=0;i<l.boardHeight;i++){const o=this.board[i][e];if(o>0){const n=this.blocks.get(o);if(typeof n>"u")continue;const h=n.segments[0].position.x===e&&n.segments[0].position.y===i?0:1;t[s].length>0&&t[s][0][0].color!==n.segments[h].color&&(s=this.resetForNextCheck(t,s)),t[s].push([n.segments[h],n.id])}else if(o<0){const n=this.viruses.get(o);if(typeof n>"u")continue;t[s].length>0&&t[s][0][0].color!==n.color&&(s=this.resetForNextCheck(t,s)),t[s].push([n,o])}else s=this.resetForNextCheck(t,s)}return this.eliminateToSmall(t),t}tryToDestroy(e){const t=new Map;for(const s of e.segments){for(const i of this.checkRow(s.position.y))for(const[o,n]of i)t.set(o,n);for(const i of this.checkColumn(s.position.x))for(const[o,n]of i)t.set(o,n)}return this.toDelete=t,t.size>3}destroy(){const e=[];this.toDelete.forEach((t,s)=>{const i=this.blocks.get(t);if(typeof i<"u"){const o=i.segments[0].position.x===s.position.x&&i.segments[0].position.y===s.position.y?0:1,n=i.segments[o];n.frame<n.numOfFrames?(this.updateBoard(3,i.id,n.position.x,n.position.y,n.color),n.frame++):(this.updateBoard(1,i.id,n.position.x,n.position.y,n.color),i.segments.splice(o,1),e.push(s))}else{const o=this.viruses.get(t);typeof o<"u"&&(o.frame<o.numOfFrames?(this.updateBoard(3,t,o.position.x,o.position.y,o.color),o.frame++):(this.updateBoard(1,t,o.position.x,o.position.y),this.setScore(100),this.viruses.delete(t),e.push(s)))}}),e.forEach(t=>{this.toDelete.get(t)===this.elementInControl.id&&(this.spawnBlock=!0),this.toDelete.delete(t)})}setScore(e){this.scoreCounter+=e;const t=document.getElementById("scoreImgs");if(this.updateScoreDiv(t,this.scoreCounter),this.updateVirusCounter(),this.recordCounter<this.scoreCounter){const s=document.getElementById("recordImgs");s!==null&&(this.recordCounter=this.scoreCounter,this.updateScoreDiv(s,this.recordCounter)),window.localStorage.setItem("record",this.recordCounter.toString())}}findFreeSpace(){const e=Math.floor(Math.random()*(l.boardHeight-8))+5,t=Math.floor(Math.random()*(l.boardWidth-1));for(let s=e;s>=0;s--)for(let i=t;i>=0;i--)if(this.board[s][i]===0){let o=!0;for(let n=-1;n<2&&o;n++)for(let h=-1;h<2&&o;h++)s+n<0||s+n>=l.boardHeight||i+h<0||i+h>=l.boardWidth||this.board[s+n][i+h]!==0&&(o=!1);if(o)return[i,s]}return[-1,-1]}spawnVirus(e,t,s,i){const o=(s+1)*-1,n={position:new r(e,t),color:i,frame:0,numOfFrames:4};this.updateBoard(0,o,e,t,i),this.viruses.set(o,n)}generateViruses(){for(let e=0;e<this.virusCount;e++){const[t,s]=this.findFreeSpace(),i=this.randomColor();t>-1&&s>-1&&this.spawnVirus(t,s,e,i)}}stageComplete(){console.log("stage complete"),clearInterval(this.loop);const e=document.createElement("dialog");e.classList.add("spritesheet"),e.classList.add("dialog"),e.classList.add("stage-complete"),l.mainDiv.appendChild(e),e.open=!0}gameOver(){console.log("game over"),clearInterval(this.loop);const e=document.createElement("dialog");e.classList.add("spritesheet"),e.classList.add("dialog"),e.classList.add("game-over"),l.mainDiv.appendChild(e),e.open=!0}debugPrintBoard(){for(let e=0;e<l.boardHeight;e++){let t="";for(let s=0;s<l.boardWidth;s++)t+="|"+this.board[e][s].toString();console.log(t)}}mainLoop(){this.loop!==-1&&clearInterval(this.loop),this.elementInControl.id===-1&&this.spawnNewBlock(),this.generateViruses(),this.loop=setInterval(()=>{let e=this.state,t=!1;switch(this.staticAnimations.forEach(s=>s.update()),this.state){case 0:if(this.frame!==0&&!this.buttonDown)break;this.canMove(this.elementInControl,r.down())?this.move(this.elementInControl,r.down()):this.tryToDestroy(this.elementInControl)?(e=1,this.blocks.forEach(s=>{s.active=!0})):(this.elementInControl.active=!1,this.spawnBlock=!0,e=3);break;case 1:this.destroy(),this.toDelete.size===0&&(e=2);break;case 2:for(const s of this.blocks.keys()){const i=this.blocks.get(s);if(!(typeof i>"u")){if(i.segments.length===0){this.blocks.delete(s);continue}else i.segments.length===1&&this.updateBoard(2,i.id,i.segments[0].position.x,i.segments[0].position.y,i.segments[0].color);i.active&&(this.canMove(i,r.down())?(this.move(i,r.down()),t=!0):this.tryToDestroy(i)?e=1:i.active=!1)}}e===1?this.blocks.forEach(s=>{s.active=!0}):t||(e=3);break;case 3:this.spawnBlock&&this.spawnNewBlock();break}this.frame=(this.frame+1)%5,this.state=e},70)}};let u=l;a(u,"mainDiv",document.createElement("div")),a(u,"boardWidth",8),a(u,"boardHeight",16);const g=new u;g.mainLoop();
